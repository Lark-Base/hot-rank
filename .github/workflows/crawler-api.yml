name: Amazon Crawler API

on:
  repository_dispatch:
    types: [crawl-request]
  workflow_dispatch:
    inputs:
      url:
        description: 'Amazon URL to crawl'
        required: true
        type: string

jobs:
  crawl:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run crawler
      id: crawler
      run: |
        # 获取URL参数
        if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
          URL="${{ github.event.client_payload.url }}"
        else
          URL="${{ github.event.inputs.url }}"
        fi
        
        echo "Crawling URL: $URL"
        
        # 运行爬虫并捕获输出
        python amazon_bestsellers_crawler.py "$URL" > crawler_result.json
        
        # 读取结果
        RESULT=$(cat crawler_result.json)
        echo "result<<EOF" >> $GITHUB_OUTPUT
        echo "$RESULT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create result comment
      if: github.event_name == 'repository_dispatch'
      uses: actions/github-script@v7
      with:
        script: |
          const result = `${{ steps.crawler.outputs.result }}`;
          const parsedResult = JSON.parse(result);
          
          let comment = '## 🕷️ Amazon爬虫结果\n\n';
          
          if (parsedResult.error) {
            comment += `❌ **错误**: ${parsedResult.error}\n`;
            if (parsedResult.usage) {
              comment += `\n**使用方法**: ${parsedResult.usage}\n`;
            }
          } else {
            comment += `✅ **成功爬取**: ${parsedResult.count} 个产品\n`;
            comment += `🔗 **URL**: ${parsedResult.url}\n\n`;
            
            if (parsedResult.data && parsedResult.data.length > 0) {
              comment += '### 📊 产品列表\n\n';
              parsedResult.data.slice(0, 5).forEach((product, index) => {
                comment += `**${product.rank}** ${product.name}\n`;
                comment += `💰 价格: ${product.price} | ⭐ 评分: ${product.rating}\n`;
                comment += `🔗 [查看产品](${product.link})\n\n`;
              });
              
              if (parsedResult.data.length > 5) {
                comment += `... 还有 ${parsedResult.data.length - 5} 个产品\n\n`;
              }
            }
          }
          
          comment += `\n---\n*爬取时间: ${new Date().toLocaleString('zh-CN')}*`;
          
          // 创建Issue评论
          if (context.payload.client_payload && context.payload.client_payload.issue_number) {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.client_payload.issue_number,
              body: comment
            });
          }
    
    - name: Upload result as artifact
      uses: actions/upload-artifact@v4
      with:
        name: crawler-result
        path: crawler_result.json
        retention-days: 7